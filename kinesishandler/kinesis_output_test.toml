## Amazon REGION of kinesis endpoint.
region = "ap-southeast-2"

## Amazon Credentials
## Credentials are loaded in the following order
## 1) Assumed credentials via STS if role_arn is specified	
## 2) explicit credentials from 'access_key' and 'secret_key'
## 3) shared profile from 'profile'
## 4) environment variables
## 5) shared credentials file
## 6) EC2 Instance Profile
#access_key = ""
#secret_key = ""
#token = ""
#role_arn = ""
#profile = ""
#shared_credential_file = ""
## Endpoint to make request against, the correct endpoint is automatically
## determined and this option should only be set if you wish to override the
## default.
##   ex: endpoint_url = "http://localhost:8000"
# endpoint_url = ""

  ## Kinesis StreamName must exist prior to starting telegraf.
  streamname = "StreamName"
  ## The partition key can be calculated using one of several methods:
  ##
  ## Use a static value for all writes:
  #  [outputs.kinesis.partition]
  #    method = "static"
  #    key = "howdy"
  #
  ## Use a random partition key on each write:
  #  [outputs.kinesis.partition]
  #    method = "random"
  #
  ## Use the measurement name as the partition key:
  #  [outputs.kinesis.partition]
  #    method = "measurement"
  #
  ## Use the value of a tag for all writes, if the tag is not set the empty
  ## default option will be used. When no default, defaults to "telegraf"
  #  [outputs.kinesis.partition]
  #    method = "tag"
  #    key = "host"
  #    default = "mykey"
	
	# Aggregate metrics into payloads that will fit into the Kinesis records. This
	# is designed to save money by making more efficient use of Kinesis.
	aggregate_metrics = true
    override_shard_count = 2

	# Kinesis cares little for what you send into it via the records.
	# We can therefore save more money by compressing the aggregated metrics.
	# Note, this only works with the aggregated metrics set to true.
	# valid options: "gzip", "snappy"
	# See https://github.com/influxdata/telegraf/tree/master/plugins/outputs/kinesis
	# for more details on each compression method.
	content_encoding = "gzip"

  ## debug will show upstream aws messages.
  debug = false
  [partition]
      method = "random"
  [formatting]
    ## Data format to output.
    ## Each data format has its own unique set of configuration options, read
    ## more about them here:
    ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_OUTPUT.md
    data_format = "json"